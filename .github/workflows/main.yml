name: CI/CD

on:
  push:
    branches:
      - '*'
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '6.0.x'

    - name: Cache NuGet packages
      uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    - name: Restore
      run: dotnet restore

    - name: Build Library
      run: dotnet build SnowflakeGenerator --configuration Release --no-restore

    - name: Build Example
      run: dotnet build SnowflakeGenerator.Example --configuration Release --no-restore

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-artifacts
        path: |
          SnowflakeGenerator/bin/Release
          SnowflakeGenerator.Example/bin/Release

  test:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '6.0.x'

    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: build-artifacts
        path: build

    - name: Run Tests
      run: dotnet test SnowflakeGenerator.Tests --no-build --no-restore --verbosity normal

  publish:
    runs-on: ubuntu-latest
    needs: test
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '6.0.x'

    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: build-artifacts
        path: build

    - name: Package Library
      run: dotnet pack SnowflakeGenerator --no-build --no-restore --configuration Release --output out

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: out/*.nupkg
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Publish NuGet Package
      run: dotnet nuget push out/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json
